---
title: "R Notebook"
output:
  html_document:
    df_print: paged
---


T.C. Çevre Şehircilik ve İklim Değişikliği bakanlığının ülke genelinde yaptığı hava kalitesi
ölçümleri [https://sim.csb.gov.tr/Services/AirQuality](https://sim.csb.gov.tr/Services/AirQuality) adresinde bulunan web uygulamasında istasyon bazında görsellenebilmektedir. 

Ham veriler ise [https://sim.csb.gov.tr/STN/STN_Report/StationDataDownloadNew](https://sim.csb.gov.tr/STN/STN_Report/StationDataDownloadNew) adresinden *Excel* formatında indirlebilmektedir. 

## Egzersiz 1 - Veri ithali

**Doğduğunuz şehre** ait olan **saatlik** hava kalitesi parametrelerini *Excel* formatında **doğduğunuz ay** için indirin. Tam bir aylık veri indirmeniz gerekmektedir.

Örnek :

- Mart ayında doğduysanız Mart 2023 verisi (Çünkü Mart 2024 bitmedi)
- Aralık ayında doğduysanız Aralık 2023 verisi
- Şubat ayında doğduysanız Şubat 2024 verisi

Yaratacağınız data.frame nesnesinin sütun isimleri Excel'de bulunan değişken sütun isimlerini içermelidir. *havaK* nesnesinin ilk 10 satırının raporda gözükmesini sağlayın.

```{r}
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
library(readxl)
havaK <- read_excel("C:/Users/fal-g/Downloads/Veri Detaylari27.03.2024 22_44_05.xlsx")
head(havaK, 10)
```

## Egzersiz 2 - Veri Kalite Kontrolü

### Zaman sütunu
Zaman değerlerini içeren sütunun isminin **Time** olmasını sağlayın
```{r}
colnames(havaK)[which(colnames(havaK) == "Zaman")] <- "Time"
```


*havaK$Time* adlı değişkendeki bütün verilerin **POSIXct** tipinde olmasını sağlayın. 

```{r}
colnames(havaK)[which(colnames(havaK) == "Zaman")] <- "Time"
```

*Time* sütunu dışındaki bütün sütunların tipinin **numeric** olmasını sağlayın. *havaK* nesnesinin ilk 10 satırının raporda gözükmesini sağlayın.

```{r}
havaK[, -which(names(havaK) == "Time")] <- sapply(havaK[, -which(names(havaK) == "Time")], as.numeric)
head(havaK, 10)
```

## Egzersiz 3 - Veri Görselleme
*dygraphs* paketini kullanarak veri setinizde bulunan iki farklı parametreyi aynı grafik üzerinde iki değişik aks kullanarak (bkz örnek) çizin.

![](graphic_example.png "İki akslı grafik örneği")


```{r}
install.packages("dygraphs")
library(dygraphs)
data_subset <- havaK[, c("Time", "SO2", "CO")]
dygraph(data_subset) %>%
  dyAxis("y", "SO2", label = "SO2") %>%
  dyAxis("y", "Parametre2", label = "CO", independentTicks = TRUE) %>%
  dySeries("SO2", label = "SO2") %>%
  dySeries("CO", label = "CO") %>%
  dyRangeSelector()
```

